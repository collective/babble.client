[buildout]
parts = 
    instance 
    test
    omelette
    test
    coverage-test
    coverage-report
    ipzope
    translation

newest = false

extends = http://good-py.appspot.com/release/dexterity/1.2.1?plone=4.1.4
versions = versions

# add additional egg download sources here. dist.plone.org contains archives
# of plone packages.
find-links =
    http://dist.plone.org/packages/
    http://dist.plone.org/thirdparty
    http://products.syslab.com/products/simple

eggs =

# reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop = 
    .
    src/babble.server
    src/actionbar.panel
    src/actionbar.babble

extensions = 
    mr.developer

sources = sources
auto-checkout = 
    babble.server
    actionbar.panel
    actionbar.babble

[sources]
babble.server = git git@github.com:collective/babble.server.git 
actionbar.panel = git git@github.com:collective/actionbar.panel.git 
actionbar.babble = git git@github.com:collective/actionbar.babble.git 

[instance]
recipe = plone.recipe.zope2instance
http-address = 8050
debug-mode = on
user = admin:admin
verbose-security = on
blob-storage = var/blobstorage

eggs =
    ${buildout:eggs}
    plone.reload
    babble.client
    actionbar.panel
    actionbar.babble

[ipzope]
# a IPython Shell for interactive use with zope running.
# you also need to put
# https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py
# to your $HOME/.ipython directory for the following to work.
recipe = zc.recipe.egg
eggs =
        ipython
        ${instance:eggs}
initialization =
        import sys, os
        os.environ["SOFTWARE_HOME"] = " "
        os.environ["INSTANCE_HOME"] = "${instance:location}"
        sys.argv[1:1] = "-p zope".split()
scripts = ipython=ipzope

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
packages = ./lib/python2.6 ./

[test]
recipe = zc.recipe.testrunner
eggs = 
    Products.PloneTestCase
    babble.server
    babble.client
    actionbar.panel
    actionbar.babble

defaults = ['-v', '--exit-with-status', '--auto-color', '--auto-progress']

# To get a test coverage report...
# bin/coverage-test
# bin/coverage-report
[coverage-test]
recipe = zc.recipe.testrunner
eggs = 
    Products.PloneTestCase
    babble.server
    babble.client
    actionbar.panel
    actionbar.babble

# This is required because we cannot include babble.server from babble.client's 
# configure.zcml since they might not necessarily be on the same server!
zcml = 
    babble.server

defaults = ['--coverage', './coverage']

# Requires: sudo aptitude install enscript
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
arguments = ('coverage', 'report')

[translation]
recipe = infrae.i18nextract
packages =
    babble.client 
output =
    ${buildout:directory}/src/babble.client/babble/client/locales
output-package = babble.client 
domain = babble.client 
