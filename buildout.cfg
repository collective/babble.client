[buildout]
parts = 
    instance 
    test
    omelette
    test
    coverage-test
    coverage-report
    ipzope

extends = 
    http://download.zope.org/Zope2/index/2.12.3/versions.cfg
    http://dist.plone.org/release/4.0b1/versions.cfg

versions = versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/packages/
    http://dist.plone.org/thirdparty
    http://products.syslab.com/products/simple

eggs =
# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop = 
    .
    src/babble.server
    src/actionbar.panel
    src/actionbar.babble
    src/collective.js.blackbird

extensions += mr.developer
sources = sources
auto-checkout = 
    babble.server
    actionbar.panel
    actionbar.babble
    collective.js.blackbird

[sources]
babble.server = svn https://svn.plone.org/svn/collective/babble.server/trunk/
actionbar.panel = svn https://svn.plone.org/svn/collective/actionbar.panel/trunk
actionbar.babble = svn https://svn.plone.org/svn/collective/actionbar.babble/trunk
collective.js.blackbird = svn https://svn.plone.org/svn/collective/collective.js.blackbird/trunk/

[instance]
recipe = plone.recipe.zope2instance
http-address = 8080
debug-mode = on
user = admin:admin
verbose-security = on

eggs =
    ${buildout:eggs}
    zope2
    Plone
    babble.client
    collective.js.blackbird
    actionbar.panel
    actionbar.babble

zcml =
    babble.server 

[ipzope]
# a IPython Shell for interactive use with zope running.
# you also need to put
# https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py
# to your $HOME/.ipython directory for the following to work.
recipe = zc.recipe.egg
eggs =
        ipython
        ${instance:eggs}
initialization =
        import sys, os
        os.environ["SOFTWARE_HOME"] = " "
        os.environ["INSTANCE_HOME"] = "${instance:location}"
        sys.argv[1:1] = "-p zope".split()
scripts = ipython=ipzope

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[test]
recipe = zc.recipe.testrunner
eggs = 
    ${buildout:eggs}
    zope2
    Plone
    babble.server
    babble.client

defaults = ['-v', '--exit-with-status', '--auto-color', '--auto-progress']

# To get a test coverage report...
# bin/coverage-test
# bin/coverage-report
[coverage-test]
recipe = zc.recipe.testrunner
eggs = 
    ${buildout:eggs}
    zope2
    Plone
    babble.server
    babble.client

defaults = ['--coverage', '../../coverage']

# Requires: sudo aptitude install enscript
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coverage=coverage-report
arguments = ('coverage', 'report')

